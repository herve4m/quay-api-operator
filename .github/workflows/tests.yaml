---
name: Build and Test the Operator
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  tests:
    runs-on: ubuntu-latest

    env:
      # Version and tag do not matter for the test.
      # However, do not use "latest" for the tag
      IMG: quay.io/herve4m/quay-api-operator:0.1.0

    steps:
      - name: Install K3D and Create a Cluster
        run: |
          set -x
          curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash
          sudo mkdir -p $HOME/.kube && sudo chown -R runner $HOME/.kube
          k3d cluster create --servers 3
          kubectl version
          k3d version

      - uses: actions/checkout@v4

      - name: Build the manager container image
        run: make docker-build
        env:
          VERSION: 0.1.0

      - name: Create the bundle
        run: make bundle
        env:
          VERSION: 0.1.0

      - name: Build the bundle container image
        run: make bundle-build
        env:
          VERSION: 0.1.0

      - name: Validate the bundle
        # The operator-sdk command should have been installed in ./bin by the
        # Makefile from the previous step.
        run: ./bin/operator-sdk bundle validate bundle --select-optional suite=operatorframework

      - name: Install the k8s-community-bundle-validator command
        run: |
          set -x
          curl -LO https://github.com/k8s-operatorhub/bundle-validator/releases/download/v0.1.0/linux-amd64-k8s-community-bundle-validator
          sudo mv linux-amd64-k8s-community-bundle-validator /usr/local/bin/k8s-community-bundle-validator
          sudo chmod +x /usr/local/bin/k8s-community-bundle-validator

      - name: Validate the bundle by using the k8s community validator
        run: k8s-community-bundle-validator bundle

      - name: Run scorecard tests
        run: ./bin/operator-sdk scorecard bundle

      - name: Import the local image into the K3D cluster
        run: k3d image import ${IMG}

      - name: Deploy the operator in the K3D cluster
        run: make deploy
        env:
          VERSION: 0.1.0

      - name: Verify that the CRDs are available
        run: |
          set -x
          kubectl get crd/apitokens.quay.herve4m.github.io \
            crd/applications.quay.herve4m.github.io \
            crd/defaultperms.quay.herve4m.github.io \
            crd/dockertokens.quay.herve4m.github.io \
            crd/firstusers.quay.herve4m.github.io \
            crd/manifestlabels.quay.herve4m.github.io \
            crd/messages.quay.herve4m.github.io \
            crd/notifications.quay.herve4m.github.io \
            crd/organizations.quay.herve4m.github.io \
            crd/proxycaches.quay.herve4m.github.io \
            crd/quotas.quay.herve4m.github.io \
            crd/repositories.quay.herve4m.github.io \
            crd/repositorymirrors.quay.herve4m.github.io \
            crd/robots.quay.herve4m.github.io \
            crd/tags.quay.herve4m.github.io \
            crd/teamldaps.quay.herve4m.github.io \
            crd/teamoidcs.quay.herve4m.github.io \
            crd/teams.quay.herve4m.github.io \
            crd/users.quay.herve4m.github.io

      - name: Verify that the manager pod is running
        run: |
          set -x
          sleep 60
          kubectl get deploy quay-api-operator-controller-manager -n quay-api-operator-system  -o jsonpath='{.status.readyReplicas}' | grep -q 1
          if [ $? -ne 0 ]
          then
            kubectl logs deploy/quay-api-operator-controller-manager -n quay-api-operator-system > /tmp/deploy.log
            exit 1
          fi

      - name: Upload pod descriptions
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: Manager pod logs
          path: /tmp/deploy.log
...
