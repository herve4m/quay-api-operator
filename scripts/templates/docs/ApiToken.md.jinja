<!---
DO NOT EDIT THIS FILE, BECAUSE IT IS AUTOMATICALLY GENERATED FROM A TEMPLATE.
Instead, edit the scripts/templates/docs/api.md.jinja template, and then run
the scripts/crd2markdown script.
--->

# {{ kind }} - {{ description }}

The {{ kind }} custom resource relies on a Secret resource to provide the connection parameters to the Quay instance.
This Secret resource must include the following data:

* `host`: URL for accessing the Quay API, such as ``https://quay.example.com:8443`` for example.
* `validateCerts`: Whether to allow insecure connections to the API.
  By default, insecure connections are refused.
* `username`: The username to use for authenticating against the API.
* `password`: The password to use for authenticating against the API.

In contrast to the other custom resources, you cannot authenticate by using an existing OAuth access token, and the secret must provide the `username` and the `password` parameters.
The OAuth access token that the {{ kind }} custom resource generates acts on behalf of the user account that you use in this secret.

You can create the secret by using the `kubectl create secret` command:

```sh
kubectl create secret generic quay-credentials --from-literal host=https://quay.example.com:8443 --from-literal validateCerts=false --from-literal username=admin --from-literal password=Sup3r53cr3L
```

Or you can create the secret from a resource file:

```yaml
---
apiVersion: v1
kind: Secret
metadata:
  name: quay-credentials
stringData:
  host: https://quay.example.com:8443
  validateCerts: "false"
  username: admin
  password: Sup3r53cr3L
```

You refer to this secret in your {{ kind }} custom resource by using the `connSecretRef` property.
See the [usage example](#usage-example).

The {{ kind }} custom resource generates an OAuth access token for authenticating against the API, and stores it in the Secret resource that you specify by using the [retSecretRef](#retsecretref) property.
You can use that secret as an input for other custom resources, by specifying it in the `connSecretRef` property of these resources.

{% if example is not none %}
## Usage Example

```yaml
{{ example | replace("quay-temp-credentials-secret", "quay-credentials") }}
```
{%- endif %}


## Properties

{% for item in properties %}
### {{ item.name }}

{{ item.description }}

__Type__: {{ item.type }}

__Required__: {{ item.required }}

__Default value__: {{ item.default }}
{% endfor %}

## Listing the {{ kind }} Resources

You can retrieve the list of the {{ kind }} custom resources in a namespace by using the `kubectl get` command:

```sh
kubectl get {{ full_name }} -n <namespace>
```

{%- if short is not none %}
You can also use the short version for the resource type:

```sh
kubectl get {{ short }} -n <namespace>
```
{%- endif %}
