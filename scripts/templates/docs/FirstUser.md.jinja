<!---
DO NOT EDIT THIS FILE, BECAUSE IT IS AUTOMATICALLY GENERATED FROM A TEMPLATE.
Instead, edit the scripts/templates/docs/api.md.jinja template, and then run
the scripts/crd2markdown script.
--->

# {{ kind }} - {{ description }}

The {{ kind }} custom resource requires Quay version 3.6 or later.
To use the resource, you must enable the first user creation feature of your Quay installation (`FEATURE_USER_INITIALIZE` in `config.yaml`).
You must also use the internal database of your Quay installation for authentication (`AUTHENTICATION_TYPE` to `Database` in `config.yaml`).",
Use the module just after installing Quay, when the database is empty.
The resource fails if user accounts are already defined in the database.

The {{ kind }} custom resource relies on a Secret resource to provide the connection parameters to the Quay instance.
This Secret resource must include the following data:

* `host`: URL for accessing the Quay API, such as ``https://quay.example.com:8443`` for example.
* `validateCerts`: Whether to allow insecure connections to the API.
  By default, insecure connections are refused.

You can create the secret by using the `kubectl create secret` command:

```sh
kubectl create secret generic quay-connection-secret --from-literal host=https://quay.example.com:8443 --from-literal validateCerts=false
```

Or you can create the secret from a resource file:

```yaml
---
apiVersion: v1
kind: Secret
metadata:
  name: quay-connection-secret
stringData:
  host: https://quay.example.com:8443
  validateCerts: "false"
```

You refer to this secret in your {{ kind }} custom resources by the using the `connSecretRef` property:

```yaml
---
apiVersion: quay.herve4m.github.io/v1alpha1
kind: {{ kind }}
metadata:
  name: {{ kind }}-sample
spec:
  # Connection parameters in a Secret resource
  connSecretRef:
    name: quay-credentials
    # By default, the operator looks for the secret in the same namespace as
    # the {{ kind }} resource, but you can specify a different namespace.
    # namespace: mynamespace
...
```

The {{ kind }} custom resource generates an OAuth access token for authenticating against the API, and stores it in the Secret resource that you specify by using the [retSecretRef](#retsecretref) property.
You can use that secret as an input for other custom resources, by specifying it in the `connSecretRef` property of these resources.
The OAuth access token that the {{ kind }} custom resource generates is valid for only 2 hours and 20 minutes.
For a permanent token, see the [ApiToken](ApiToken.md) custom resource.


{% if example is not none %}
## Usage Example

```yaml
{{ example }}
```
{%- endif %}


## Properties

{% for item in properties %}
### {{ item.name }}

{{ item.description }}

__Type__: {{ item.type }}

__Required__: {{ item.required }}

__Default value__: {{ item.default }}
{% endfor %}

## Listing the {{ kind }} Resources

You can retrieve the list of the {{ kind }} custom resources in a namespace by using the `kubectl get` command:

```sh
kubectl get {{ full_name }} -n <namespace>
```

{%- if short is not none %}
You can also use the short version for the resource type:

```sh
kubectl get {{ short }} -n <namespace>
```
{%- endif %}
