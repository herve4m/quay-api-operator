---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: teamldaps.quay.herve4m.github.io
spec:
  group: quay.herve4m.github.io
  names:
    kind: TeamLdap
    plural: teamldaps
  scope: Namespaced
  versions:
    - name: v1alpha1
      additionalPrinterColumns:
        - name: Quay name
          type: string
          description: Name in Quay
          jsonPath: .spec.name
        - name: Quay organization
          type: string
          description: Organization in Quay
          jsonPath: .spec.organization
        - name: Success
          type: string
          description: The status of the resource creation process in Quay
          jsonPath: .status.conditions[?(@.type == 'Successful')].status
        - name: Message
          type: string
          description: The error message when the resource creation process fails
          jsonPath: .status.message
        - name: State
          type: string
          description: The state of the reconciliation process
          jsonPath: .status.conditions[?(@.type == 'Running')].reason
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
      schema:
        openAPIV3Schema:
          description: Synchronize Quay Container Registry teams with LDAP groups
          properties:
            apiVersion:
              description: >
                APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the
                latest internal value, and may reject unrecognized values.
                More info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: >
                Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint
                the client submits requests to. Cannot be updated. In
                CamelCase. More info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the desired state of TeamLdap
              type: object
              required:
                - connSecretRef
                - name
                - organization
              properties:
                connSecretRef:
                  description: >
                    Reference to the secret resource that stores the
                    connection parameters to the Quay Container Registry API.

                    The secret must include the 'host', 'token' (or 'username'
                    and 'password'), and optionally the 'validateCerts' keys.
                  properties:
                    name:
                      description: Name of the secret resource.
                      type: string
                    namespace:
                      description: >
                        Namespace of the secret resource. By default, the
                        secret resource is retrieved from the same namespace
                        as the current TeamLdap resource.
                      type: string
                  type: object
                  required:
                    - name
                preserveInQuayOnDeletion:
                  default: false
                  description: >
                    Whether to preserve the corresponding Quay object when you
                    delete the TeamLdap resource. When set to
                    'false' (the default), the object is deleted from Quay.
                  type: boolean
                groupDn:
                  description: LDAP group distinguished name (DN), relative to the base DN that you
                    defined in the 'config.yaml' Quay configuration file with the 'LDAP_BASE_DN' parameter.
                    For example, if the LDAP group DN is 'cn=group1,ou=groups,dc=example,dc=org' and
                    the base DN is 'dc=example,dc=org', then you must set 'groupDn' to 'cn=group1,ou=groups'.
                    'groupDn' is required when 'sync' is 'true'.
                  type: string
                keepUsers:
                  default: true
                  description: If 'true', then the current team members are kept after the synchronization
                    is disabled. If 'false', then the team members are removed (except robot accounts).
                    'keepUsers' is only used when 'sync' is 'false'.
                  type: boolean
                name:
                  description: Name of the team to synchronize or unsynchronize with an LDAP group.
                    That team must exist (see the Team resource to create it).
                  type: string
                organization:
                  description: Name of the organization for the team. That organization must exist.
                  type: string
                sync:
                  default: true
                  description: If 'true', then the team members are retrieved from the LDAP group
                    that you define in 'groupDn'. The pre-existing members are removed from the team
                    before the synchronization process starts. Existing robot account members are
                    not removed. If 'false', then the synchronization from LDAP is disabled. Existing
                    team members (from LDAP) are kept, except if you set 'keepUsers' to 'false'.
                  type: boolean

            status:
              description: >
                Status defines the observed state of TeamLdap
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: true
      subresources:
        status: {}
